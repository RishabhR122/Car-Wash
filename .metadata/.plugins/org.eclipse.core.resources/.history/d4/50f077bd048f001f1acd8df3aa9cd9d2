package com.Admin.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.Admin.model.Admin;
import com.Admin.model.CustomerDetails;
import com.Admin.model.OrderDetails;
import com.Admin.model.Receipt;
import com.Admin.service.AdminService;

import jakarta.validation.Valid;

@RestController
@Validated
@RequestMapping("/admin")
public class AdminController {

	@Autowired
	AdminService adminService;

	@GetMapping("/seeAllCustomers")
	public List<CustomerDetails> getAllCustomer() {
		return adminService.getAllCustomers();
	}

	@GetMapping("/seeCustomer/{id}")
	public CustomerDetails getCustomerById(@PathVariable String id) {
		return adminService.getCustomerById(id);
	}

	@GetMapping("/all")
	public List<Admin> findAllAdmins() {
		return adminService.getAllAdmins();
	}

	@GetMapping("/{id}")
	public Admin findAdminById(@PathVariable String id) {
		return adminService.findAdminById(id);
	}

	// add details of a new customer
	@PostMapping("/add")
	public String addAdmin(@Valid @RequestBody Admin admin) {
		adminService.addAdmin(admin);
		return "Admin Added Successfully";
	}

	@DeleteMapping("/delete/{id}")
	public String deleteAdmin(@PathVariable String id) {
		adminService.deleteAdmin(id);
		return "Admin Deleted Successfully";
	}

	// update details of a existing customer
	@PutMapping("/update")
	public String updateAdmin(@Valid @RequestBody Admin admin) {
		adminService.updateAdmin(admin);
		return "Admin Details Updated Successfully";
	}

	@PutMapping("/updateCustomer")
	public String updateExistingCustomer(@RequestBody CustomerDetails customer) {
		adminService.updateExistingCustomer(customer);
		return "Customer Details Updated Successfully";
	}

	@PostMapping("/createReceipt")
	public String generateReceipt(@Valid @RequestBody Receipt receipt) {

		adminService.generateReceipt(receipt);
		return "Receipt generated Successfully";

	}

	@GetMapping("/getReceipt/{receiptId}")
	public Receipt getReceiptbyId(@PathVariable int receiptId) {

		return adminService.getReceiptbyId(receiptId);

	}

}
